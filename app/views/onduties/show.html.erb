<div id="map"></div>

<strong>update status: </strong><a id="info">getting data</a>

<p id="notice"><%= notice %></p>

<p>
	<strong>driverName:</strong>
	<%= @onduty.driverName%>
</p>

<p>
	<strong>PlateNumber:</strong>
	<%= @onduty.plateNumber%>
</p>

<p>
	<strong>studentName:</strong>
	<%= @onduty.studentName%>
</p>

<p>
	<strong>studentId:</strong>
	<%= @onduty.studentId%>
</p>

<p>
	<strong>vehicleLat:</strong>
	<a id = 'vehicleLat'><%= @onduty.vehicleLat%></a>
</p>

<p>
	<strong>vehicleLng:</strong>
	<a id = 'vehicleLng'><%= @onduty.vehicleLng%></a>
</p>

<p>
	<strong>startLat:</strong>
	<%= @onduty.startLat%>
</p>

<p>
	<strong>startLng:</strong>
	<%= @onduty.startLng%>
</p>

<p>
	<strong>endLat:</strong>
	<%= @onduty.endLat%>
</p>

<p>
	<strong>endLng:</strong>
	<%= @onduty.endLng%>
</p>

<p>
	<strong>isFinished:</strong>
	<a id = 'isFinished'><%= @onduty.isFinished%></a>
</p>

<%= link_to 'Back', onduties_path%>

<%= javascript_include_tag "mapMarker.js" %>
<script type="text/javascript">
let handler = Gmaps.build('Google');
let directionsDisplay = new google.maps.DirectionsRenderer();
let directionsService = new google.maps.DirectionsService();
let cooridinate = [];
let index = 0;

let startLat = <%= @onduty.startLat %>;
let startLng = <%= @onduty.startLng %>;
let endLat = <%= @onduty.endLat %>;
let endLng = <%= @onduty.endLng %>;
let duty = <%= @onduty.to_json.html_safe %>;

handler.buildMap({
	provider: {},
	internal: { id: 'map' }
}, () => {
	directionsDisplay.setMap(handler.getMap());
	let markers = handler.addMarkers([getVehicleMarker(duty)]);
	handler.bounds.extendWith(markers);
	handler.fitMapToBounds();
});

function calcRoute() {
	let origin      = new google.maps.LatLng(startLat, startLng);
	let destination = new google.maps.LatLng(endLat, endLng);
	let request = {
		origin:      origin,
		destination: destination,
		travelMode:  google.maps.TravelMode.DRIVING
	};
	directionsService.route(request, function(response, status) {
		if (status == google.maps.DirectionsStatus.OK) {
			directionsDisplay.setDirections(response);
			cooridinate = response.routes[0].overview_path

			let leg = response.routes[0].legs[0];
		}
		else {
			window.alert('Directions request failed due to ' + status);
		}
	});
}

calcRoute(); // call this anywhere you want
console.log("Start");
setTimeout(updateCarPos, 5000);

function updateCarPos() {
	let i = index;
	document.getElementById("info").innerHTML = i + 1 + "/" + cooridinate.length;
	let id = <%= @onduty.id %>;
	console.log("update location " + i);

	$.ajax({
		type:    "POST",
		url:     "<%=update_car_pos_path%>",
		data:    {id: id, lat: cooridinate[i].lat(), lng: cooridinate[i].lng()},
		success: function(post){ console.log('success') },
		error:   function(post){ console.log(this) }
	})

	document.getElementById("vehicleLat").innerHTML = cooridinate[i].lat();
	document.getElementById("vehicleLng").innerHTML = cooridinate[i].lng();
	index += 1;
	if (index < cooridinate.length) setTimeout(updateCarPos, 3000);
	else {
		console.log("Finish");
		document.getElementById("isFinished").innerHTML = "True";
	}
}
</script>
